* Estes interactor estava no presenter vai pronde?
-------------------------------------------------------
  TValuePresenter = class(TPresenter, IValuePresenter);
  private
    FExitInteractor: IExitEventModelUpdater;
  protected
    procedure SetView(const Value: IView);
  public
    procedure InfraInitInstance; override;
  end;

  TNumberPresenter = class(TValuePresenter, INumberPresenter)
  private
    FKeyboardInteractor: IInputNumberInteractor;
  protected
    procedure SetView(const Value: IView);
  public
    procedure InfraInitInstance; override;
  end;

  TBooleanPresenter = class(TValuePresenter, IBooleanPresenter)
  private
    FMouseInteractor: IClickEventModelUpdater;
  protected
    procedure SetView(const Value: IView);
  public
    procedure InfraInitInstance; override;
  end;

  TListPresenter = class(TPresenter, IListPresenter)
  private
    FMouseInteractor: IClickEventModelUpdater;
  protected
    procedure SetView(const Value: IView);
    function GetListItem: IListItemPresenter;  <<<<< continuou
  public
    procedure InfraInitInstance; override;
    property ListItem: IListItemPresenter read GetListItem;
  end;

  TContainerPresenter = class(TPresenter, IContainerPresenter)
  private
    FObjectSelectionInteractor: IObjectSelectionUpdater;
  protected
    procedure SetView(const Value: IView);
  public
    procedure InfraInitInstance; override;
  end;

procedure TValuePresenter.InfraInitInstance;
begin
  inherited;
  FExitInteractor := TExitEventModelUpdater.Create;
end;

procedure TValuePresenter.SetView(const Value: IView);
begin
  if Value <> FView then
  begin
    inherited SetView(Value);
    FExitInteractor.View := Value;
  end;
end;

procedure TNumberPresenter.InfraInitInstance;
begin
  inherited;
  FKeyboardInteractor := TInputNumberInteractor.Create;
end;

procedure TNumberPresenter.SetView(const Value: IView);
begin
  if Value <> FView then
  begin
    inherited SetView(Value);
    FKeyboardInteractor.View := Value;
  end;
end;

procedure TBooleanPresenter.SetView(const Value: IView);
begin
  if Value <> FView then
  begin
    inherited SetView(Value);
    FMouseInteractor.View := Value;
  end;
end;

procedure TBooleanPresenter.InfraInitInstance;
begin
  inherited;
  FMouseInteractor := TClickEventModelUpdater.Create;
end;

procedure TListPresenter.SetView(const Value: IView);
begin
  if Value <> FView then
  begin
    inherited SetView(Value);
    FMouseInteractor.View := Value;
  end;
end;

procedure TListPresenter.InfraInitInstance;
begin
  inherited;
  FMouseInteractor := TClickEventModelUpdater.Create;
end;

{ TContainerPresenter }

procedure TContainerPresenter.InfraInitInstance;
begin
  inherited;
  FObjectSelectionInteractor := TObjectSelectionUpdater.Create;
end;

procedure TContainerPresenter.SetView(const Value: IView);
begin
  if Value <> FView then
  begin
    inherited SetView(Value);
  FObjectSelectionInteractor.View := Value;
  end;
end;

-------------------------------------------------------
* O integerPresenter alterava propriedade do interator? teremos agora views base para value, integer, number, list, boolean? 

  TIntegerPresenter = class(TNumberPresenter, IIntegerPresenter)
  public
    procedure InfraInitInstance; override;
  end;

procedure TIntegerPresenter.InfraInitInstance;
begin
  inherited;
  FKeyboardInteractor.AcceptDecimals := False;
end;